@model DesafioFortes.MVC.ViewModels.PedidoViewModel
@using DesafioFortes.Domain.Entities;
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>PedidoViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.DataPedido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataPedido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataPedido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ValorTotal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ValorTotal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ValorTotal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QuantidadeProdutos, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QuantidadeProdutos, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QuantidadeProdutos, "", new { @class = "text-danger" })
            </div>
        </div>
                
        <div class="form-group">
            @Html.LabelFor(model => model.FornecedorID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">              
                @Html.DropDownList("FornecedorID", string.Empty)
                @Html.ValidationMessageFor(model => model.FornecedorID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Produtos, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProdutoID", string.Empty)
                @Html.ValidationMessageFor(model => model.Produtos, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Adicionar Item" class="btn btn-default" onclick="AddItemPedido()"/>
            </div>
        </div>
       
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Create" class="btn btn-default" onclick="AddIPedido()"/>
            </div>
        </div>
    </div>
}
<div class="content">
    <div >
        <div id="tabela">
            <div  style="padding: 50px">
                <div >
                    <div>Carregando</div>
                </div>
                <p></p>
            </div>
        </div>
    </div>
</div> 

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/Pedidos/carregarProdutos.js"></script>
